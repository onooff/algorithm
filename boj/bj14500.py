n, m = map(int, input().split())
board = list()
for i in range(n):
    board.append(list(map(int, input().split())))


def isin(y, x):
    global n, m
    return 0 <= y < n and 0 <= x < m


tetromino = [
    ((0, 3), (0, 2), (0, 1), (0, 0)),
    ((3, 0), (2, 0), (1, 0), (0, 0)),

    ((1, 1), (1, 0), (0, 1), (0, 0)),

    ((2, 1), (2, 0), (1, 0), (0, 0)),
    ((2, -1), (2, 0), (1, 0), (0, 0)),
    ((1, 2), (0, 2), (0, 1), (0, 0)),
    ((-1, 2), (0, 2), (0, 1), (0, 0)),
    ((-2, 1), (-2, 0), (-1, 0), (0, 0)),
    ((-2, -1), (-2, 0), (-1, 0), (0, 0)),
    ((1, -2), (0, -2), (0, -1), (0, 0)),
    ((-1, -2), (0, -2), (0, -1), (0, 0)),

    ((2, 1), (1, 1), (1, 0), (0, 0)),
    ((2, -1), (1, -1), (1, 0), (0, 0)),
    ((-2, 1), (-1, 1), (-1, 0), (0, 0)),
    ((-2, -1), (-1, -1), (-1, 0), (0, 0)),
    ((1, 2), (1, 1), (0, 1), (0, 0)),
    ((-1, 2), (-1, 1), (0, 1), (0, 0)),
    ((1, -2), (1, -1), (0, -1), (0, 0)),
    ((-1, -2), (-1, -1), (0, -1), (0, 0)),

    ((1, 0), (-1, 0), (0, 1), (0, 0)),
    ((1, 0), (-1, 0), (0, -1), (0, 0)),
    ((0, 1), (0, -1), (1, 0), (0, 0)),
    ((0, 1), (0, -1), (-1, 0), (0, 0)),
]
ans = 0
for i in range(n):
    for j in range(m):
        for t in tetromino:
            sum_val = 0
            for d in t:
                ni = i+d[0]
                nj = j+d[1]
                if isin(ni, nj):
                    sum_val += board[ni][nj]
                else:
                    sum_val = -1
                    break
            ans = max(sum_val, ans)
print(ans)
